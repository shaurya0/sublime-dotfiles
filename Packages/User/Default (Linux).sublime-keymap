[
    { "keys": ["alt+j"],"command": "move", "args": {"by": "words", "forward": false} },
    { "keys": ["alt+l"], "command": "move", "args": {"by": "word_ends", "forward": true} },

    { "keys": ["alt+shift+j"], "command": "move", "args": {"by": "words", "forward": false, "extend": true} },
    { "keys": ["alt+shift+l"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true} },
    { "keys": ["alt+k"], "command": "left_delete" },
    { "keys": ["alt+shift+k"], "command": "delete_word", "args": { "forward": false } },
    { "keys": ["ctrl+h"], "command": "right_delete" },
    { "keys": ["ctrl+shift+h"], "command": "delete_word", "args": { "forward": true } },
    { "keys": ["ctrl+shift+o"], "command": "move", "args": {"by": "pages", "forward": false} },
    { "keys": ["ctrl+shift+."], "command": "move", "args": {"by": "pages", "forward": true} },
    { "keys": ["alt+n"], "command": "move_to", "args": {"to": "bol", "extend": false} },
    { "keys": ["alt+m"], "command": "move_to", "args": {"to": "eol", "extend": false} },
    { "keys": ["alt+shift+n"], "command": "move_to", "args": {"to": "bol", "extend": true} },
    { "keys": ["alt+shift+m"], "command": "move_to", "args": {"to": "eol", "extend": true} },

    { "keys": ["ctrl+shift+a"], "command": "select_all" },
    { "keys": ["alt+shift+z"], "command": "move_to", "args": {"to": "bol", "extend": true} },
    { "keys": ["alt+shift+c"], "command": "move_to", "args": {"to": "eol", "extend": true} },
    { "keys": ["alt+w"], "command": "move", "args": {"by": "lines", "forward": false} },
    { "keys": ["alt+x"], "command": "move", "args": {"by": "lines", "forward": true} },
    { "keys": ["alt+shift+up"], "command": "select_lines", "args": {"forward": false} },
    { "keys": ["alt+shift+down"], "command": "select_lines", "args": {"forward": true} },
    { "keys": ["ctrl+shift+space"], "command": "move", "args": {"by": "characters", "forward": false} },
    { "keys": ["ctrl+space"], "command": "move", "args": {"by": "characters", "forward": true} },
    { "keys": ["alt+u"], "command": "move", "args": {"by": "characters", "forward": false} },
    { "keys": ["alt+o"], "command": "move", "args": {"by": "characters", "forward": true} },
    { "keys": ["alt+shift+u"], "command": "move", "args": {"by": "characters", "forward": false, "extend":true} },
    { "keys": ["alt+shift+o"], "command": "move", "args": {"by": "characters", "forward": true, "extend":true} },

    { "keys": ["ctrl+shift+]"], "command": "copy_path"},
    { "keys": ["ctrl+shift+i"], "command": "move_to", "args": {"to": "bof", "extend": false} },
    { "keys": ["ctrl+shift+,"], "command": "move_to", "args": {"to": "eof", "extend": false} },
    { "keys": ["ctrl+shift+j"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true} },
    { "keys": ["ctrl+shift+l"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true} },
    { "keys": ["f12"], "command": "goto_definition"},
    { "keys": ["alt+up"], "command": "swap_line_up" },
    { "keys": ["alt+down"], "command": "swap_line_down" },
    { "keys": ["ctrl+,"], "command": "insert", "args": {"characters": "\n"} },

    { "keys": ["ctrl+,"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"} },
    { "keys": ["ctrl+i"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line Before.sublime-macro"} },

    { "keys": ["ctrl+,"], "command": "commit_completion", "context":
        [
            { "key": "auto_complete_visible" },
            { "key": "setting.auto_complete_commit_on_tab", "operand": false }
        ]
    },

    { "keys": ["("], "command": "insert_snippet", "args": {"contents": "( $0 )"}, "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        { "key": "selector", "operator": "equal", "operand": "source.c++" },
        { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
      ]
    },
    { "keys": ["("], "command": "insert_snippet", "args": {"contents": "( ${0:$SELECTION} )"}, "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
        { "key": "selector", "operator": "equal", "operand": "source.c++" }
      ]
    },
    { "keys": ["alt+space"], "command": "auto_complete" },
    { "keys": ["alt+space"], "command": "replace_completion_with_auto_complete", "context":
        [
            { "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
            { "key": "auto_complete_visible", "operator": "equal", "operand": false },
            { "key": "setting.tab_completion", "operator": "equal", "operand": true }
        ]
    },

    { "keys": ["ctrl+,"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    },
    { "keys": ["ctrl+i"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    },

    { "keys": ["ctrl+,"], "command": "insert_snippet", "args": {"contents": "\n\t$0\n"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selector", "operator": "equal", "operand": "meta.scope.between-tag-pair", "match_all": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        ]
    },
    { "keys": ["ctrl+i"], "command": "insert_snippet", "args": {"contents": "\n\t$0\n"}, "context":
        [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selector", "operator": "equal", "operand": "meta.scope.between-tag-pair", "match_all": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        ]
    },
    // Find panel key bindings
    { "keys": ["ctrl+,"], "command": "find_next", "context":
        [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
    },
    { "keys": ["ctrl+i"], "command": "find_prev", "context":
        [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
    },
    { "keys": ["ctrl+alt+;"], "command": "find_all", "args": {"close_panel": true},
         "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}]
    },

    // Replace panel key bindings
    { "keys": ["ctrl+,"], "command": "find_next", "context":
        [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
    },
    { "keys": ["ctrl+i"], "command": "find_prev", "context":
        [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
    },
    { "keys": ["ctrl+alt+;"], "command": "find_all", "args": {"close_panel": true},
        "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"}]
    },

    // Incremental find panel key bindings
    { "keys": ["ctrl+,"], "command": "hide_panel", "context":
        [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
    },
    { "keys": ["ctrl+i"], "command": "find_prev", "context":
        [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
    },
    { "keys": ["ctrl+alt+;"], "command": "find_all", "args": {"close_panel": true},
        "context": [{"key": "panel", "operand": "incremental_find"}, {"key": "panel_has_focus"}]
    },
    [
        { "keys": ["ctrl+shift+b"], "command": "build", "args": {"variant": "xterm"} }
    ],

    { "keys": ["ctrl+shift+u"], "command": "single_selection", "context":
        [
            { "key": "num_selections", "operator": "not_equal", "operand": 1 }
        ]
    },
    { "keys": ["ctrl+shift+u"], "command": "clear_fields", "context":
        [
            { "key": "has_next_field", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["ctrl+shift+u"], "command": "clear_fields", "context":
        [
            { "key": "has_prev_field", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["ctrl+shift+u"], "command": "hide_panel", "args": {"cancel": true},
        "context":
        [
            { "key": "panel_visible", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["ctrl+shift+u"], "command": "hide_overlay", "context":
        [
            { "key": "overlay_visible", "operator": "equal", "operand": true }
        ]
    },
    { "keys": ["ctrl+shift+u"], "command": "hide_auto_complete", "context":
        [
            { "key": "auto_complete_visible", "operator": "equal", "operand": true }
        ]
    },

    { "keys": ["ctrl+shift+r"], "command": "goto_symbol_in_project" },

    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
        [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\( $", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^ \\)", "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "source.php" }
        ]
    },
    { "keys": ["ctrl+/"], "command": "toggle_comment", "args": { "block": false } },
    { "keys": ["ctrl+shift+/"], "command": "toggle_comment", "args": { "block": true } },
        { "keys": ["f5"], "command": "debug" },
        { "keys": ["f9"], "command": "toggle_breakpoint" },
        { "keys": ["ctrl+alt+w"], "command": "toggle_watcher" },
        { "keys": ["ctrl+alt+r"], "command": "refresh_expressions" }
]
